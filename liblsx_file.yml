
LSXFILE:
  calls:
    - MULHLDE
  code: |
    ; fnum to FCB address
    LSXCALCFCB:
    PUSH BC
    PUSH DE
    LD DE,37
    CALL MULHLDE
    LD DE,LSXFCBS
    ADD HL,DE
    POP DE
    POP BC
    RET

    ; HL >= 8 ?
    LSXFCHECKNUM:
    PUSH HL
    PUSH DE

    ; HL >= 8
    LD DE,8
    OR A
    SBC HL,DE
    ; non carry (HL >= 8)

    POP DE
    POP HL
    RET

FOPEN:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
  code: |
    ; HL=fnum DE=fname addr BC=mode
    LD (LSXFCB),HL
    LD A,C
    AND 3
    LD C,A
    LD (LSXFMODE),BC

    CALL LSXFCHECKNUM
    JP C,.fopen1
    ; return $FF
    LD HL,255
    RET

    .fopen1
    ; LSXFCB=fnum*37+LSXFCBS
    LD HL,(LSXFCB)
    CALL LSXCALCFCB
    LD (LSXFCB),HL

    LD C,$29  ; _PPATH
    CALL BDOS

    LD HL,(LSXFMODE)
    ; mode >= 3
    LD DE,3
    OR A
    SBC HL,DE
    JR C,.fopen2
    LD C,$16  ; _FMAKE
    JR .fopen3
    .fopen2
    LD C,$0F  ; _FOPEN
    .fopen3
    LD DE,(LSXFCB)
    CALL BDOS

    ; SET RANDOM RECORD to 0(4bytes)
    LD HL,(LSXFCB)
    LD DE,33
    ADD HL,DE
    LD (HL),0
    INC HL
    LD (HL),0
    INC HL
    LD (HL),0
    INC HL
    LD (HL),0

    LD L,A
    LD H,0
    RET

FSEEK:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
    - NEGHL
  code: |
    ; HL=fnum DE=offset BC=mode(0=head, 1=current, 2=tail)
    CALL LSXFCHECKNUM
    JP C,.fseek1
    ; return $FF
    LD HL,255
    RET

    .fseek1
    ; LSXFCB=fnum*37+LSXFCBS
    CALL LSXCALCFCB
    LD (LSXFCB),HL

    LD A,C
    CP 1
    JP Z,.fseek_current
    JP C,.fseek_head

    ; fseek_tail
    PUSH DE
    PUSH HL
    LD BC,33
    ADD HL,BC
    EX DE,HL    ; DE=(FCB)Random record
    POP HL
    LD BC,16
    ADD HL,BC   ; HL=(FCB)File size
    EX (SP),HL
    CALL NEGHL
    EX (SP),HL
    POP BC      ; BC=-offset

    LD A,(HL)
    INC HL
    SCF
    SBC A,C
    LD (DE),A
    INC DE

    LD A,(HL)
    INC HL
    SBC A,B
    LD (DE),A
    INC DE

    LD A,(HL)
    INC HL
    SBC A,0
    LD (DE),A
    INC DE

    LD A,(HL)
    SBC A,0
    LD (DE),A
    JP .fseek_end

    .fseek_head
    LD BC,33
    ADD HL,BC
    LD (HL),E ; FCB+33
    INC HL
    LD (HL),D ; FCB+34
    INC HL
    LD (HL),0 ; FCB+35
    INC HL
    LD (HL),0 ; FCB=36

    JP .fseek_end

    .fseek_current
    LD BC,33
    ADD HL,BC

    ; FCB+33-36 += DE
    LD A,E
    ADD A,(HL)
    LD (HL),A
    LD A,D
    INC HL
    ADC A,(HL)
    LD (HL),A
    INC HL
    LD A,0
    ADC A,(HL)
    LD (HL),A
    INC HL
    LD A,0
    ADC A,(HL)
    LD (HL),A

    .fseek_end
    LD HL,0
    RET

FGETC:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
  code: |
    ; HL=fnum

    CALL LSXFCHECKNUM
    JP C,.fgetc1
    ; return $FF
    LD HL,255
    RET

    .fgetc1
    ; LSXFCB=fnum*37+LSXFCBS
    CALL LSXCALCFCB
    LD (LSXFCB),HL

    ; SET DTA
    PUSH HL
    LD  DE,.fgetbuf
    LD  C,$1A ; _SETDTA
    CALL  BDOS
    POP HL

    ; FCB head to DE
    LD E,L
    LD D,H

    ; SET RECORD SIZE(FCB+14)
    LD BC,14
    ADD HL,BC
    LD (HL),1
    INC HL
    LD (HL),0

    LD HL,1     ; read record size

    LD C,$27    ; _RDBLK
    CALL BDOS
    CP 0
    JR NZ,.fgeterr

    ; ok
    LD A,(.fgetbuf)
    LD L,A
    LD H,0
    LD A,0
    RET

    .fgeterr
    LD H,$FF
    LD L,1    ; error code (tekito-)
    LD A,L
    SCF
    RET

    .fgetbuf
    DS  1

FPUTC:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
  code: |
    ; HL=fnum DE=chr

    CALL LSXFCHECKNUM
    JP C,.fgetc1
    ; return $FF
    LD HL,255
    RET

    .fgetc1
    ; LSXFCB=fnum*37+LSXFCBS
    CALL LSXCALCFCB
    LD (LSXFCB),HL


    ; SET DTA
    PUSH HL

    LD HL,.fputbuf
    LD (HL),E

    LD  DE,.fputbuf
    LD  C,$1A ; _SETDTA
    CALL  BDOS
    POP HL

    ; FCB head to DE
    LD E,L
    LD D,H

    ; SET RECORD SIZE(FCB+14)
    LD BC,14
    ADD HL,BC
    LD (HL),1
    INC HL
    LD (HL),0

    LD HL,1     ; write record size

    LD C,$26    ; _WRBLK
    CALL BDOS
    CP 0
    JR NZ,.fputerr

    ; ok
    LD A,(.fputbuf)
    LD L,A
    LD H,0
    LD A,0
    RET

    .fputerr
    LD H,$FF
    LD L,1    ; error code (tekito-)
    LD A,L
    SCF
    RET

    .fputbuf
    DS  1


FCLOSE:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
  code: |
    ; HL=fnum
    CALL LSXCALCFCB
    EX DE,HL
    LD C,$10  ; _FCLOSE
    CALL BDOS
    LD L,A
    LD H,0
    RET


FREADWRITE:
  code: |
    ; SET DTA (DE)
    PUSH BC
    LD  C,$1A ; _SETDTA
    CALL  BDOS

    ; SET RECORD SIZE(FCB+14)
    LD HL,(LSXFCB)
    LD BC,14
    ADD HL,BC
    LD (HL),1
    INC HL
    LD (HL),0

    POP BC

    LD HL,(LSXFCB)  ; DE->FCB
    EX DE,HL

    LD L,C          ; HL->read record size
    LD H,B

    RET

FREAD:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
    - FREADWRITE
  code: |
    ; HL=fnum DE=address BC=size

    CALL LSXFCHECKNUM
    JP C,.fread1
    ; return $FF
    LD HL,255
    RET

    .fread1
    ; LSXFCB=fnum*37+LSXFCBS
    CALL LSXCALCFCB
    LD (LSXFCB),HL

    CALL FREADWRITE

    LD C,$27
    CALL BDOS
    ADD A,1
    SBC A,A
    RET NC
    LD L,A
    LD H,A  ;HL=$FFFF CF=1
    RET

FWRITE:
  calls:
    - LSXCALLS
    - FWORK
    - LSXFILE
    - FREADWRITE
  code: |
    ; HL=fnum DE=address BC=size

    CALL LSXFCHECKNUM
    JP C,.fread1
    ; return $FF
    LD HL,255
    RET

    .fread1
    ; LSXFCB=fnum*37+LSXFCBS
    CALL LSXCALCFCB
    LD (LSXFCB),HL

    CALL FREADWRITE

    LD C,$26
    CALL BDOS

    LD L,A
    LD H,0

    RET

FWORK:
  code: |
    ;
  works:
    LSXFCBS: 296
    LSXFCB: 2 
    LSXFMODE: 2

